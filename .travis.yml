language: python
sudo: required
python:
- 3.6
env:
  global:
  - DOCKER_REGISTRY: "registry.cn-hangzhou.aliyuncs.com/leosocy"
  - IMAGE: "${DOCKER_REGISTRY}/anteater"
  - IMAGE_TAG: ${IMAGE}:${TRAVIS_COMMIT:0:8}
  - DOCKER_IMAGE_CACHE_DIR: ${HOME}/.cache/docker
  - PIP_CACHE_DIR: "${HOME}/.cache/pip"

services:
- docker

before_cache:
- >
  mkdir -p ${DOCKER_IMAGE_CACHE_DIR} &&
  docker images -a --filter="dangling=false" --format "{{.Repository}}:{{.Tag}} {{.ID}}" |
  xargs -n 2 -t sh -c "test -e ${DOCKER_IMAGE_CACHE_DIR}/\$1.tar.gz ||
  docker save \$0 | gzip -2 > ${DOCKER_IMAGE_CACHE_DIR}/\$1.tar.gz"
cache:
  directories:
  - ${DOCKER_IMAGE_CACHE_DIR}
  - ${PIP_CACHE_DIR}

before_install:
- sudo mkdir -p /etc/docker
- |
  sudo tee /etc/docker/daemon.json <<-'EOF'
  {
      "registry-mirrors": ["https://ml26n6qh.mirror.aliyuncs.com"]
  }
  EOF
- sudo service docker restart

stages:
- test_all
- build_image
- deploy

jobs:
  include:
  - stage: test_all
    name: test all
    before_script:
    - pip install -i https://mirrors.aliyun.com/pypi/simple pipenv
    - pipenv install --dev --ignore-pipfile
    script:
    - pipenv run style_check
    - pipenv run test
    after_success:
    - pipenv run codecov -t ${CODECOV_TOKEN}
  - stage: build_image
    name: build_image
    if: branch = master
    before_install:
    - >
      if [[ -d ${DOCKER_IMAGE_CACHE_DIR} ]]; then ls ${DOCKER_IMAGE_CACHE_DIR}/*.tar.gz |
      xargs -I {file} sh -c "zcat {file} | docker load"; fi
    before_script:
    - >
      echo "${ALIYUN_DOCKER_REGISTRY_PASSWD}" |
      docker login -u "${ALIYUN_DOCKER_REGISTRY_USERNAME}" --password-stdin ${DOCKER_REGISTRY}
    script:
    - docker build -t ${IMAGE_TAG} -f Dockerfile .
    - docker push ${IMAGE_TAG}
  - stage: build_image
    name: build_image_manual
    if: branch =~ /^feature.*$/ OR branch =~ /^hotfix.*$/
    when: manual
    before_install:
    - >
      if [[ -d ${DOCKER_IMAGE_CACHE_DIR} ]]; then ls ${DOCKER_IMAGE_CACHE_DIR}/*.tar.gz |
      xargs -I {file} sh -c "zcat {file} | docker load"; fi
    before_script:
    - >
      echo "${ALIYUN_DOCKER_REGISTRY_PASSWD}" |
      docker login -u "${ALIYUN_DOCKER_REGISTRY_USERNAME}" --password-stdin ${DOCKER_REGISTRY}
    script:
    - docker build -t ${IMAGE_TAG} -f Dockerfile-dev .
    - docker push ${IMAGE_TAG}
